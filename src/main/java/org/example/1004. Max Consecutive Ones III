1004. Max Consecutive Ones III

Given a binary array nums and an integer k, return the maximum number of consecutive 1's in the array if you can flip at most k 0's.

 

Example 1:

Input: nums = [1,1,1,0,0,0,1,1,1,1,0], k = 2
Output: 6
Explanation: [1,1,1,0,0,1,1,1,1,1,1]
Bolded numbers were flipped from 0 to 1. The longest subarray is underlined.
Example 2:

Input: nums = [0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1], k = 3
Output: 10
Explanation: [0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1]
Bolded numbers were flipped from 0 to 1. The longest subarray is underlined.



public int longestOnes(int[] A, int K) {
    int left = 0;
    int right = 0;
    int max = 0;
    
    int numZeroes = 0;
    for (right= 0; right<A.length; right++) {

        if (A[right]==0) numZeroes++;
        
        if (numZeroes > K) {
            if (A[left]==0) numZeroes--;
            left ++;
        }
        if (numZeroes <= K) {
            // this is probably what I could come up during interview...
            max = Math.max(max, right-left +1 );
        }
    }
    return max;
}
