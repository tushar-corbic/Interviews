 Count All Subarrays With Given Sum

You are given an integer array 'arr' of size 'N' and an integer 'K'.

Your task is to find the total number of subarrays of the given array whose sum of elements is equal to k.

A subarray is defined as a contiguous block of elements in the array.

Example:

import java.util.* ;
import java.io.*; 
public class Solution {
    public static int findAllSubarraysWithGivenSum(int arr[], int s) {
        // Write your code here.    
        return helper(arr, s)-helper(arr, s-1);
    }
    static int helper(int[]arr, int target){
        int start =0;
        int n = arr.length;
        int end = 0;
        int sum =0;

        int ans =0;
        while(end<n){
            sum+= arr[end];
            while(sum>target){
                sum-=arr[start];
                start++;
            }
            ans+= end-start+1;
            end++;
        }
        return ans;
    }
}


class Solution {
    public int numSubarraysWithSum(int[] nums, int goal) {
        int sum =0;
        Map<Integer,Integer>map = new HashMap<>();
        int ans = 0;
        map.put(0, 1);
        for(int i =0; i<nums.length; i++){
            sum+= nums[i];
            ans += map.getOrDefault(sum-goal, 0);
            map.put(sum, map.getOrDefault(sum,0)+1);
        }
        return ans;
    }
}
