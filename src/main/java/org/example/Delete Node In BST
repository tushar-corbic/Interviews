Delete Node In BST

/*********************************************************

 Following is the BinaryTreeNode structure:

 class BinaryTreeNode<T> {
     T data;
     BinaryTreeNode<T> left;
     BinaryTreeNode<T> right;
     BinaryTreeNode() {
         this.data = null;
         this.left = null;
         this.right = null;
     }
     BinaryTreeNode(T data) {
         this.data = data;
         this.left = null;
         this.right = null;
     }
     BinaryTreeNode(T data, BinaryTreeNode<T> left, BinaryTreeNode<T> right) {
         this.data = data;
         this.left = left;
         this.right = right;
     }
 };
 ********************************************************/

public class Solution {
    public static BinaryTreeNode<Integer> deleteNode(BinaryTreeNode<Integer> root, int key) {
        // Write your code here.
        if(root==null)
            return root;
        if(root.data>key){
            root.left = deleteNode(root.left, key);
        }else if(root.data<key){
            root.right = deleteNode(root.right, key);
        }else{
            if(root.left==null){
                return root.right;
            }
            if(root.right==null)
                return root.left;
            BinaryTreeNode<Integer>suc = helper(root);
            root.data = suc.data;
            root.right = deleteNode(root.right, suc.data);
        }
        return root;
    }
    static BinaryTreeNode<Integer> helper(BinaryTreeNode<Integer> root){
        root = root.right;
        while(root!=null && root.left!=null)
            root =root.left;
        return root;
    }
}
