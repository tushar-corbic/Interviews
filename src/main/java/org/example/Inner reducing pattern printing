Inner reducing pattern printing

Ninja has a number ‘N’. He wants to print the pattern in such a way that the outer rectangle is of the number ‘N’ and the number goes on decreasing as we move inside the rectangles.

For example, if ‘N’ = 4, then pattern will be:

4 4 4 4 4 4 4 
4 3 3 3 3 3 4 
4 3 2 2 2 3 4 
4 3 2 1 2 3 4 
4 3 2 2 2 3 4 
4 3 3 3 3 3 4 
4 4 4 4 4 4 4 

import java.util.* ;
import java.io.*; 


public class Solution {
	public static int[][] rectangularNumbers(int n) {
		// Write your code here.
		int size = 2*n -1;
		int[][]dp = new int[size][size];
		int front= 0;
		int back = size-1;
		while(n>0){
			for(int i = front; i<=back; i++){
				for(int j = front; j<=back; j++){
					if(i==front || i==back || j==front || j==back){
						dp[i][j] = n;
					}
				}
			}
			front++;
			back--;
			n--;
		}
		return dp;
	}
}
