Kth smallest node in BST
You have been given a Binary Search Tree of integers. You are supposed to return the k-th (1-indexed) smallest element in the tree.



For example:
For the given binary search tree and k = 3
/*********************************************************

 Following is the TreeNode structure:

 class TreeNode {
     int data;
     TreeNode left;
     TreeNode right;
     TreeNode() {
         this.data = 0;
         this.left = null;
         this.right = null;
     }
     TreeNode(int data) {
         this.data = data;
         this.left = null;
         this.right = null;
     }
     TreeNode(int data, TreeNode left, TreeNode right) {
         this.data = data;
         this.left = left;
         this.right = right;
     }
 };
 ********************************************************/

public class Solution {
    public static int kthSmallest(TreeNode root, int k) {
        // Write your code here.
        int[]ans = new int[]{Integer.MIN_VALUE};
        int[] counter = new int[]{0};
        helper(root, k, ans, counter);
        return ans[0];
    }
    static void helper(TreeNode root, int k, int[]ans, int[]counter){
        if(root==null || counter[0]>k)
            return ;
        helper(root.left, k, ans, counter);
        counter[0]++;
        if(counter[0]==k){
            ans[0] = root.data;
            return;
        }
        helper(root.right, k, ans, counter);
    }
}
